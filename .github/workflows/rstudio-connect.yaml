on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: RStudio Connect

jobs:
  R-CMD-check:
    runs-on: ubuntu-18.04
    env:
      RSC_VERSION: 1.8.6.2
      RSC_LICENSE: ${{ secrets.RSC_LICENSE }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      # TODO: should use a real action to make sure that cleanup happens on error...
      - name: run RStudio Connect
        run: |
          docker run -d --rm -v $PWD/.github/users.txt:/etc/users.txt -v $PWD/.github/rstudio-connect.gcfg:/etc/rstudio-connect/rstudio-connect.gcfg --name=pins-connect -p 3939:3939 --privileged -e RSC_LICENSE -e RSTUDIO_CONNECT_HASTE=enabled rstudio/rstudio-connect:${RSC_VERSION}
      - name: create RStudio Connect users
        run: |
          docker exec pins-connect awk ' { system("useradd -m -s /bin/bash "$1); system("echo \""$1":"$2"\" | chpasswd"); system("id "$1) } ' /etc/users.txt

      - uses: r-lib/actions/setup-r@v1
        id: install-r

      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps("local::.", dependencies = TRUE), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ubuntu-18.04-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ubuntu-18.04-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          pak::local_system_requirements(execute = TRUE)
          pak::pkg_system_requirements("covr", execute = TRUE)
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::pkg_install("rstudio/connectapi")
          pak::pkg_install("rcmdcheck")
        shell: Rscript {0}

      - name: output docker logs
        run: |
          docker logs pins-connect

      - name: wait for connect to start
        run: |
          curl -s --retry 10 --retry-connrefused http://localhost:3939

      - name: initialize Connect users
        shell: Rscript {0}
        run: |
          admin_key <- connectapi:::create_first_admin(url = "http://localhost:3939", user = "admin", password = "admin0", email = "admin@example.com", provider = "pam")

          susan_key <- connectapi:::create_first_admin(url = "http://localhost:3939", user = "susan", password = "susan", email = "susan@example.com", provider = "pam")
          derek_key <- connectapi:::create_first_admin(url = "http://localhost:3939", user = "derek", password = "derek", email = "derek@example.com", provider = "pam")

          saveRDS(
            list(
              admin_key = admin_key$api_key,
              susan_key = susan_key$api_key,
              derek_key = derek_key$api_key
            ),
            "tests/testthat/creds.rds"
          )


      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: rsconnect-results
          path: check

      - name: clean up RStudio Connect
        run: |
          docker stop pins-connect
